# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

# Reusable Block
defaults: &defaults
  docker:
    - image: jcolemorrison/circleci-node-awscli:latest
  working_directory: ~/project

jobs:
  # Install the project dependencies
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-modules-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install
          command: yarn install
      - save_cache:
          paths:
            - node_modules
          key: node_modules-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - .
  # Test the project
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: yarn test
  # Deploy to staging
  deploy_staging:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      # necessary to hook into docker
      - setup_remote_docker
      - run:
          name: Set ENV Variables
          # Sets the STAGING specific values to be used in deploy.sh
          command: |
            echo 'export IMAGE=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$STAGING_IMAGE_REPO' >> $BASH_ENV
            echo 'export TASK_DEFINITION=$STAGING_TASK_DEFINITION' >> $BASH_ENV
            echo 'export SERVICE=$STAGING_SERVICE' >> $BASH_ENV
            echo 'export CLUSTER=$STAGING_CLUSTER' >> $BASH_ENV
      - run:
          name: build image and deploy
          # optionally, you could batch those exports here without using $BASH_ENV.  But just to keep it separate...
          command: |
            chmod +x ./deploy.sh
            ./deploy.sh

  # Deploy to production
  deploy_production:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      # necessary to hook into docker
      - setup_remote_docker
      - run:
          name: Set ENV Variables
          # Sets the PRODUCTION specific values to be used in deploy.sh
          command: |
            echo 'export IMAGE=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$PRODUCTION_IMAGE_REPO' >> $BASH_ENV
            echo 'export TASK_DEFINITION=$PRODUCTION_TASK_DEFINITION' >> $BASH_ENV
            echo 'export SERVICE=$PRODUCTION_SERVICE' >> $BASH_ENV
            echo 'export CLUSTER=$PRODUCTION_CLUSTER' >> $BASH_ENV
      - run:
          name: build image and deploy
          command: |
            chmod +x ./deploy.sh
            ./deploy.sh

workflows:
  version: 2
  test_install_deploy:
    jobs:
      - install
      - test:
          requires:
            - install
      - deploy_staging:
          requires:
            - test
          filters:
            branches:
              only:
                - staging
      - deploy_production:
          requires:
            - test
          filters:
            branches:
              only:
                - master
